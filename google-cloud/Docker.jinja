{#- Copyright 2016 Docker Inc. All rights reserved. -#}

{%- set VERSION = 'v8' -%}
{%- set PROJECT = env['project'] -%}
{%- set STACK = env['deployment'] -%}
{%- set ZONE = properties['zone'] -%}
{%- set REGION = ZONE[:ZONE.rfind('-')] -%}

{%- macro StartupScript(type) -%}
  {%- filter replace('\n', '","') -%}
    {%- filter replace('"', '\\"') -%}
      {%- filter replace('\\', '\\\\') -%}
        {%- include 'startup.sh' -%}
      {%- endfilter -%}
    {%- endfilter -%}
  {%- endfilter -%}
{%- endmacro -%}

outputs:
- name: externalIp
  value: $(ref.{{ STACK }}-external-ip.address)
- name: zone
  value: {{ ZONE }}
- name: ssh
  value: "You can ssh into the Swarm with: gcloud compute ssh --project {{ PROJECT }} --zone {{ ZONE }} {{ STACK }}-manager-1"
- name: managers
  value: "You can list the Managers here: https://console.cloud.google.com/compute/instances?project={{ PROJECT }}&filter=name:{{ STACK }}-manager-*"
- name: deployment
  value: "You can inspect this deployment here: https://console.cloud.google.com/deployments/details/{{ STACK }}?project={{ PROJECT }}"

resources:
- name: {{ STACK }}-bootstrap
  type: compute.v1.instance
  properties:
    zone: {{ ZONE }}
    machineType: zones/{{ ZONE }}/machineTypes/g1-small
    disks:
    - type: PERSISTENT
      boot: true
      autoDelete: true
      initializeParams:
        sourceImage: projects/debian-cloud/global/images/family/debian-8
        diskSizeGb: 200
    networkInterfaces:
    - network: $(ref.{{ STACK }}-network.selfLink)
      accessConfigs:
      - name: External NAT
        type: ONE_TO_ONE_NAT
    metadata:
      items:
      - key: manager-script
        value: |
          {% filter indent(10) %}{% set type='leader' %}{% include 'startup.sh' %}{% endfilter %}
      - key: startup-script
        value: |
          {% filter indent(10) %}{% include 'bootstrap.sh' %}{% endfilter %}
    scheduling:
      preemptible: false
      onHostMaintenance: TERMINATE
      automaticRestart: false
    serviceAccounts:
    - scopes:
      - https://www.googleapis.com/auth/compute

- name: {{ STACK }}-config
  type: runtimeconfig.v1beta1.config
  properties:
    config: {{ STACK }}-config

- name: {{ STACK }}-manager-infrakit
  type: runtimeconfig.v1beta1.variable
  properties:
    parent: $(ref.{{ STACK }}-config.name)
    variable: infrakit
    text: |
      {% filter indent(6) %}{% include 'infrakit.json.template' %}{% endfilter %}

- name: {{ STACK }}-disk-image-{{ VERSION }}
  type: compute.v1.image
  properties:
    family: docker
    rawDisk:
      source: https://storage.googleapis.com/docker-for-gcp-images/{{ VERSION }}/gce.img.tar.gz

- name: {{ STACK }}-external-ip
  type: compute.v1.address
  properties:
    region: {{ REGION }}

- name: {{ STACK }}-health-check
  type: compute.v1.httpHealthCheck
  properties:
    port: 44554
    requestPath: /
    checkIntervalSec: 5
    timeoutSec: 5
    unhealthyThreshold: 2
    healthyThreshold: 2

- name: {{ STACK }}-lb-pool
  type: compute.v1.targetPool
  properties:
    region: {{ REGION }}
    sessionAffinity: NONE
    instances: []
    healthChecks:
    - $(ref.{{ STACK }}-health-check.selfLink)

- name: {{ STACK }}-lb-forward
  type: compute.v1.forwardingRule
  properties:
    region: {{ REGION }}
    IPProtocol: TCP
    portRange: 80-65535
    IPAddress: $(ref.{{ STACK }}-external-ip.address)
    target: $(ref.{{ STACK }}-lb-pool.selfLink)

- name: {{ STACK }}-network
  type: compute.v1.network
  properties:
    autoCreateSubnetworks: true

- name: {{ STACK }}-allow-ssh
  type: compute.v1.firewall
  properties:
    network: $(ref.{{ STACK }}-network.selfLink)
    sourceRanges: [{{ properties['remoteSshOrigin'] }}]
    targetTags:
    - swarm-manager
    allowed:
    - IPProtocol: tcp
      ports: [22]

- name: {{ STACK }}-allow-lb
  type: compute.v1.firewall
  properties:
    network: $(ref.{{ STACK }}-network.selfLink)
    sourceRanges: [0.0.0.0/0]
    allowed:
    - IPProtocol: tcp
      ports: [80]

- name: {{ STACK }}-allow-internal
  type: compute.v1.firewall
  properties:
    network: $(ref.{{ STACK }}-network.selfLink)
    sourceRanges: [10.128.0.0/9]
    allowed:
    - IPProtocol: tcp
      ports: [0-65535]
    - IPProtocol: udp
      ports: [0-65535]
    - IPProtocol: esp
